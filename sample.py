# coding:utf-8
import numpy as np
import matplotlib.pyplot as plt
data = np.array([ [-0.1660,  0.4268], [ 0.4406, -0.7760], [-0.9998,  0.1021], [-0.3953,  0.2136], [-0.7065, -0.0800], [-0.8153,  0.0086], [-0.6275, -0.0985], [-0.3089,  0.2893], [-0.2065,  0.4076], [ 0.0776,  0.1197], [-0.1616,  0.4213], [ 0.3704, -0.6011], [-0.5911, -0.1024], [ 0.7562, -0.1944], [-0.9452,  0.0890], [ 0.3409, -0.5034], [-0.1654,  0.4711], [ 0.1174,  0.0066], [-0.7192, -0.1066], [-0.6038, -0.1084], [ 0.6015, -0.5513], [ 0.9365,  0.2370], [-0.3732,  0.1892], [ 0.3846, -0.6239], [ 0.7528, -0.2536], [ 0.7892, -0.0887], [-0.8299, -0.0396], [-0.9219,  0.1254], [-0.6603, -0.0748], [ 0.7563, -0.1834], [-0.8033, -0.0939], [-0.1578,  0.4199], [ 0.9158,  0.2285], [ 0.0663,  0.0788], [ 0.3838, -0.6382], [-0.3690,  0.2144], [ 0.3730, -0.6793], [ 0.6693, -0.4198], [-0.9634,  0.1384], [ 0.5003, -0.7215], [ 0.9777,  0.3213], [ 0.4963, -0.7455], [-0.4391,  0.1032], [ 0.5786, -0.6887], [-0.7935,  0.0095], [-0.1042,  0.4154], [ 0.8172, -0.0493], [-0.4128,  0.1065], [-0.4244,  0.1910], [-0.7399,  0.0188], [-0.9613,  0.0017], [ 0.3577, -0.5261], [-0.5767,  0.0227], [-0.4689,  0.0787], [-0.0169,  0.2354], [-0.8933,  0.0824], [ 0.1482, -0.0950], [-0.7065, -0.1217], [ 0.1786, -0.2310], [ 0.3995, -0.6156], [-0.7953, -0.0056], [-0.1719,  0.3791], [ 0.3888, -0.6051], [-0.1716,  0.3531], [-0.9001,  0.0854], [ 0.0718,  0.1157], [ 0.3276, -0.5447], [ 0.0298,  0.2032], [ 0.8892,  0.1763], [ 0.1731, -0.1168], [ 0.8068, -0.0495], [-0.7251, -0.0789], [-0.7214, -0.0832], [ 0.6148, -0.5182], [-0.2046,  0.4108], [-0.6693, -0.0615], [ 0.8550,  0.0347], [-0.3045,  0.1834], [ 0.5016, -0.6261], [ 0.4520, -0.5701], [ 0.7666, -0.163 ], [ 0.2473, -0.3588], [ 0.5019, -0.6847], [-0.3022,  0.3021], [-0.4601,  0.0751], [ 0.7918, -0.1727], [-0.1438,  0.3845], [ 0.9297,  0.1700], [ 0.3269, -0.5215], [ 0.2434, -0.3585], [-0.7705, -0.0377], [ 0.8990,  0.1463], [-0.1002,  0.4416], [ 0.1568, -0.0987], [-0.1837,  0.5171], [-0.5259, -0.1055], [ 0.8068, -0.1084], [ 0.1474, -0.0385], [-0.9943,  0.2411], [ 0.2343, -0.3325]])

# train1 = data[81:100]
# train2 = data[0:60]
# train = np.append(train1, train2, axis=0)
train = data[20:100]
print(train)
eval = data[0:20]
print("kjsfa")
print(eval)

# eval = data[80:]
l = 10 ** -5
n = 79
Phi = np.array( [train[:,0]**k for k in range( n+1 )] )
eval_Phi = np.array( [eval[:,0]**k for k in range( n+1 )] )
IE = np.identity( n+1 )
IE[0,0] = 0
theta = np.dot(np.dot(np.linalg.inv(np.dot(Phi, Phi.T) + l * IE), Phi), train[:, 1])
print('theta =', theta)
t_err = np.dot(Phi.T, theta) - train[:, 1]
# print("t_err")
# print (t_err)
e_err = np.dot( eval_Phi.T, theta ) - eval[:,1]
# print("e_err")
# print(e_err)
print ('n= {0:2d} : Train error={1:7.5f} Eval error={2:7.5f}'.format(n, (t_err ** 2).sum() / len(t_err), (e_err ** 2).sum() / len(e_err)))
plt.scatter( train[:,0] , train[:,1], color='blue' ) # 学習データの描画
plt.scatter( eval[:,0] , eval[:,1], color='red' ) # 評価データの描画
xx = np.arange( -0.7, +0.71, 0.01 )
P = np.array( [xx**k for k in range( n+1 )] )
plt.ylim([-0.5,+0.5])
plt.xlim([-0.7,+0.7])
plt.plot( xx, np.dot( P.T, theta ), color='black', linewidth='1.0' )
plt.show()  # グラフの表示

# rangel = [-0.9998, -0.16, -1.0, -0.9, -0.8, -0.7, -0.6, -0.5, -0.4, -0.3, -0.2, -0.1, 0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6 ,0.7, 0.8, 0.9, 1.0]
# def definition(x):
#     y = 0
#     y = 0.2357 - 1.7268 * x ** 1 - 4.1312 * x ** 2 + 5.2418 * x ** 3 + 8.697 * x ** 4 - 5.2129 * x ** 5 - 4.6185 * x **6 + 1.773 * x **7
#     print (x)
#     print("の時")
#     print(y)
#     return y

# for x in rangel:
#     definition(x)

# print("----------------------------------------------------------------------------------------")

# def definition2(x):
#     y = 0
#     y = 0.2357*x**7 - 1.7268 * x ** 6 - 4.1312 * x ** 5 + 5.2418 * x ** 4 + 8.697 * x ** 3 - 5.2129 * x ** 2 - 4.6185 * x + 1.773
#     print (x)
#     print("の時")
#     print(y)
#     return y
# for k in rangel:
#     definition2(k)